
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Answer_keysScalarFieldEnum = {
  id: 'id',
  title: 'title',
  year: 'year',
  file_url: 'file_url',
  created_at: 'created_at'
};

exports.Prisma.CategoriesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  created_at: 'created_at'
};

exports.Prisma.CommentsScalarFieldEnum = {
  id: 'id',
  post_id: 'post_id',
  user_id: 'user_id',
  content: 'content',
  created_at: 'created_at'
};

exports.Prisma.Course_plansScalarFieldEnum = {
  id: 'id',
  course_id: 'course_id',
  plan_type: 'plan_type',
  plan_name: 'plan_name',
  price: 'price',
  duration_days: 'duration_days',
  created_at: 'created_at'
};

exports.Prisma.Course_reviewsScalarFieldEnum = {
  id: 'id',
  course_id: 'course_id',
  user_id: 'user_id',
  rating: 'rating',
  review: 'review',
  created_at: 'created_at'
};

exports.Prisma.Course_videosScalarFieldEnum = {
  id: 'id',
  course_id: 'course_id',
  title: 'title',
  video_url: 'video_url',
  position: 'position',
  is_demo: 'is_demo',
  created_at: 'created_at'
};

exports.Prisma.CoursesScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  thumbnail_url: 'thumbnail_url',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.EnrollmentsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  course_id: 'course_id',
  plan_id: 'plan_id',
  status: 'status',
  started_at: 'started_at',
  expires_at: 'expires_at'
};

exports.Prisma.Google_adsScalarFieldEnum = {
  id: 'id',
  placement: 'placement',
  ad_code: 'ad_code',
  created_at: 'created_at'
};

exports.Prisma.Mock_attemptsScalarFieldEnum = {
  id: 'id',
  test_id: 'test_id',
  user_id: 'user_id',
  answers: 'answers',
  score: 'score',
  started_at: 'started_at',
  completed_at: 'completed_at'
};

exports.Prisma.Mock_categoriesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description'
};

exports.Prisma.Mock_questionsScalarFieldEnum = {
  id: 'id',
  test_id: 'test_id',
  question_text: 'question_text',
  question_type: 'question_type',
  options: 'options',
  correct_answer: 'correct_answer',
  marks: 'marks'
};

exports.Prisma.Mock_seriesScalarFieldEnum = {
  id: 'id',
  category_id: 'category_id',
  title: 'title',
  description: 'description',
  created_at: 'created_at',
  price: 'price'
};

exports.Prisma.Mock_testsScalarFieldEnum = {
  id: 'id',
  series_id: 'series_id',
  title: 'title',
  description: 'description',
  duration_minutes: 'duration_minutes',
  total_marks: 'total_marks',
  created_at: 'created_at',
  is_free: 'is_free'
};

exports.Prisma.PaymentsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  course_id: 'course_id',
  amount: 'amount',
  payment_method: 'payment_method',
  status: 'status',
  transaction_id: 'transaction_id',
  created_at: 'created_at',
  mock_series_id: 'mock_series_id'
};

exports.Prisma.Post_tagsScalarFieldEnum = {
  post_id: 'post_id',
  tag_id: 'tag_id'
};

exports.Prisma.Post_templatesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  structure: 'structure',
  created_at: 'created_at'
};

exports.Prisma.PostsScalarFieldEnum = {
  id: 'id',
  category_id: 'category_id',
  title: 'title',
  slug: 'slug',
  content: 'content',
  external_url: 'external_url',
  thumbnail_url: 'thumbnail_url',
  published_at: 'published_at',
  created_by: 'created_by',
  created_at: 'created_at',
  updated_at: 'updated_at',
  template_id: 'template_id',
  content_json: 'content_json',
  content_html: 'content_html'
};

exports.Prisma.Study_materialsScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  file_url: 'file_url',
  created_at: 'created_at'
};

exports.Prisma.TagsScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  full_name: 'full_name',
  email: 'email',
  password_hash: 'password_hash',
  role: 'role',
  created_at: 'created_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.enrollment_status = exports.$Enums.enrollment_status = {
  active: 'active',
  expired: 'expired',
  cancelled: 'cancelled'
};

exports.payment_status = exports.$Enums.payment_status = {
  pending: 'pending',
  success: 'success',
  failed: 'failed'
};

exports.plan_type = exports.$Enums.plan_type = {
  free: 'free',
  one_time: 'one_time',
  subscription: 'subscription'
};

exports.question_type = exports.$Enums.question_type = {
  mcq: 'mcq',
  true_false: 'true_false',
  fill_blank: 'fill_blank'
};

exports.user_role = exports.$Enums.user_role = {
  admin: 'admin',
  student: 'student'
};

exports.Prisma.ModelName = {
  answer_keys: 'answer_keys',
  categories: 'categories',
  comments: 'comments',
  course_plans: 'course_plans',
  course_reviews: 'course_reviews',
  course_videos: 'course_videos',
  courses: 'courses',
  enrollments: 'enrollments',
  google_ads: 'google_ads',
  mock_attempts: 'mock_attempts',
  mock_categories: 'mock_categories',
  mock_questions: 'mock_questions',
  mock_series: 'mock_series',
  mock_tests: 'mock_tests',
  payments: 'payments',
  post_tags: 'post_tags',
  post_templates: 'post_templates',
  posts: 'posts',
  study_materials: 'study_materials',
  tags: 'tags',
  users: 'users'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\theka\\Documents\\GitHub\\haryana-job-alert\\backend\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\theka\\Documents\\GitHub\\haryana-job-alert\\backend\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel answer_keys {\n  id         BigInt    @id @default(autoincrement())\n  title      String\n  year       Int?\n  file_url   String\n  created_at DateTime? @default(now()) @db.Timestamp(6)\n}\n\nmodel categories {\n  id          BigInt    @id @default(autoincrement())\n  name        String    @unique\n  description String?\n  created_at  DateTime? @default(now()) @db.Timestamp(6)\n  posts       posts[]\n}\n\nmodel comments {\n  id         BigInt    @id @default(autoincrement())\n  post_id    BigInt?\n  user_id    BigInt?\n  content    String\n  created_at DateTime? @default(now()) @db.Timestamp(6)\n  posts      posts?    @relation(fields: [post_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  users      users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n}\n\nmodel course_plans {\n  id            BigInt        @id @default(autoincrement())\n  course_id     BigInt?\n  plan_type     plan_type\n  plan_name     String\n  price         Decimal?      @default(0) @db.Decimal(10, 2)\n  duration_days Int?\n  created_at    DateTime?     @default(now()) @db.Timestamp(6)\n  courses       courses?      @relation(fields: [course_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  enrollments   enrollments[]\n}\n\n/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.\nmodel course_reviews {\n  id         BigInt    @id @default(autoincrement())\n  course_id  BigInt?\n  user_id    BigInt?\n  rating     Int?\n  review     String?\n  created_at DateTime? @default(now()) @db.Timestamp(6)\n  courses    courses?  @relation(fields: [course_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  users      users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n}\n\nmodel course_videos {\n  id         BigInt    @id @default(autoincrement())\n  course_id  BigInt?\n  title      String\n  video_url  String\n  position   Int\n  is_demo    Boolean?  @default(false)\n  created_at DateTime? @default(now()) @db.Timestamp(6)\n  courses    courses?  @relation(fields: [course_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n}\n\nmodel courses {\n  id             BigInt           @id @default(autoincrement())\n  title          String\n  description    String?\n  thumbnail_url  String?\n  created_at     DateTime?        @default(now()) @db.Timestamp(6)\n  updated_at     DateTime?        @default(now()) @db.Timestamp(6)\n  course_plans   course_plans[]\n  course_reviews course_reviews[]\n  course_videos  course_videos[]\n  enrollments    enrollments[]\n  payments       payments[]\n}\n\nmodel enrollments {\n  id           BigInt             @id @default(autoincrement())\n  user_id      BigInt?\n  course_id    BigInt?\n  plan_id      BigInt?\n  status       enrollment_status? @default(active)\n  started_at   DateTime?          @default(now()) @db.Timestamp(6)\n  expires_at   DateTime?          @db.Timestamp(6)\n  courses      courses?           @relation(fields: [course_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  course_plans course_plans?      @relation(fields: [plan_id], references: [id], onUpdate: NoAction)\n  users        users?             @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n}\n\nmodel google_ads {\n  id         BigInt    @id @default(autoincrement())\n  placement  String\n  ad_code    String\n  created_at DateTime? @default(now()) @db.Timestamp(6)\n}\n\nmodel mock_attempts {\n  id           BigInt      @id @default(autoincrement())\n  test_id      BigInt?\n  user_id      BigInt?\n  answers      Json\n  score        Int?\n  started_at   DateTime?   @default(now()) @db.Timestamp(6)\n  completed_at DateTime?   @db.Timestamp(6)\n  mock_tests   mock_tests? @relation(fields: [test_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  users        users?      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n}\n\nmodel mock_categories {\n  id          BigInt        @id @default(autoincrement())\n  name        String        @unique\n  description String?\n  mock_series mock_series[]\n}\n\nmodel mock_questions {\n  id             BigInt         @id @default(autoincrement())\n  test_id        BigInt?\n  question_text  String\n  question_type  question_type? @default(mcq)\n  options        Json?\n  correct_answer String\n  marks          Int?           @default(1)\n  mock_tests     mock_tests?    @relation(fields: [test_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n}\n\nmodel mock_series {\n  id              BigInt           @id @default(autoincrement())\n  category_id     BigInt?\n  title           String\n  description     String?\n  created_at      DateTime?        @default(now()) @db.Timestamp(6)\n  price           Decimal?         @db.Decimal\n  mock_categories mock_categories? @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  mock_tests      mock_tests[]\n  payments        payments[]\n}\n\nmodel mock_tests {\n  id               BigInt           @id @default(autoincrement())\n  series_id        BigInt?\n  title            String\n  description      String?\n  duration_minutes Int\n  total_marks      Int\n  created_at       DateTime?        @default(now()) @db.Timestamp(6)\n  is_free          Boolean?\n  mock_attempts    mock_attempts[]\n  mock_questions   mock_questions[]\n  mock_series      mock_series?     @relation(fields: [series_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n}\n\nmodel payments {\n  id             BigInt          @id @default(autoincrement())\n  user_id        BigInt?\n  course_id      BigInt?\n  amount         Decimal         @db.Decimal(10, 2)\n  payment_method String\n  status         payment_status? @default(pending)\n  transaction_id String?\n  created_at     DateTime?       @default(now()) @db.Timestamp(6)\n  mock_series_id BigInt?\n  courses        courses?        @relation(fields: [course_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  mock_series    mock_series?    @relation(fields: [mock_series_id], references: [id], onDelete: NoAction, onUpdate: NoAction)\n  users          users?          @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n}\n\nmodel post_tags {\n  post_id BigInt\n  tag_id  BigInt\n  posts   posts  @relation(fields: [post_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n  tags    tags   @relation(fields: [tag_id], references: [id], onDelete: Cascade, onUpdate: NoAction)\n\n  @@id([post_id, tag_id])\n}\n\nmodel post_templates {\n  id          BigInt    @id @default(autoincrement())\n  name        String    @unique\n  description String?\n  structure   Json\n  created_at  DateTime? @default(now()) @db.Timestamptz(6)\n  posts       posts[]\n}\n\nmodel posts {\n  id             BigInt          @id @default(autoincrement())\n  category_id    BigInt?\n  title          String\n  slug           String          @unique\n  content        String\n  external_url   String?\n  thumbnail_url  String?\n  published_at   DateTime?       @db.Timestamp(6)\n  created_by     BigInt?\n  created_at     DateTime?       @default(now()) @db.Timestamp(6)\n  updated_at     DateTime?       @default(now()) @db.Timestamp(6)\n  template_id    BigInt?\n  content_json   Json?\n  content_html   String?\n  comments       comments[]\n  post_tags      post_tags[]\n  categories     categories?     @relation(fields: [category_id], references: [id], onUpdate: NoAction)\n  users          users?          @relation(fields: [created_by], references: [id], onUpdate: NoAction)\n  post_templates post_templates? @relation(fields: [template_id], references: [id], onUpdate: NoAction)\n}\n\nmodel study_materials {\n  id          BigInt    @id @default(autoincrement())\n  title       String\n  description String?\n  file_url    String\n  created_at  DateTime? @default(now()) @db.Timestamp(6)\n}\n\nmodel tags {\n  id        BigInt      @id @default(autoincrement())\n  name      String      @unique\n  post_tags post_tags[]\n}\n\nmodel users {\n  id             BigInt           @id @default(autoincrement())\n  full_name      String\n  email          String           @unique\n  password_hash  String\n  role           user_role?       @default(student)\n  created_at     DateTime?        @default(now()) @db.Timestamp(6)\n  comments       comments[]\n  course_reviews course_reviews[]\n  enrollments    enrollments[]\n  mock_attempts  mock_attempts[]\n  payments       payments[]\n  posts          posts[]\n}\n\nenum enrollment_status {\n  active\n  expired\n  cancelled\n}\n\nenum payment_status {\n  pending\n  success\n  failed\n}\n\nenum plan_type {\n  free\n  one_time\n  subscription\n}\n\nenum question_type {\n  mcq\n  true_false\n  fill_blank\n}\n\nenum user_role {\n  admin\n  student\n}\n",
  "inlineSchemaHash": "f069db55257403c7cc74585ffdf71f6cd95c2a10b0cd82d73644c7b2828e61f2",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"answer_keys\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"year\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"file_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"categories\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"posts\",\"kind\":\"object\",\"type\":\"posts\",\"relationName\":\"categoriesToposts\"}],\"dbName\":null},\"comments\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"post_id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"posts\",\"kind\":\"object\",\"type\":\"posts\",\"relationName\":\"commentsToposts\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"commentsTousers\"}],\"dbName\":null},\"course_plans\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"course_id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"plan_type\",\"kind\":\"enum\",\"type\":\"plan_type\"},{\"name\":\"plan_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"duration_days\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"courses\",\"kind\":\"object\",\"type\":\"courses\",\"relationName\":\"course_plansTocourses\"},{\"name\":\"enrollments\",\"kind\":\"object\",\"type\":\"enrollments\",\"relationName\":\"course_plansToenrollments\"}],\"dbName\":null},\"course_reviews\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"course_id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"review\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"courses\",\"kind\":\"object\",\"type\":\"courses\",\"relationName\":\"course_reviewsTocourses\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"course_reviewsTousers\"}],\"dbName\":null},\"course_videos\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"course_id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"video_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"position\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"is_demo\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"courses\",\"kind\":\"object\",\"type\":\"courses\",\"relationName\":\"course_videosTocourses\"}],\"dbName\":null},\"courses\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"thumbnail_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"course_plans\",\"kind\":\"object\",\"type\":\"course_plans\",\"relationName\":\"course_plansTocourses\"},{\"name\":\"course_reviews\",\"kind\":\"object\",\"type\":\"course_reviews\",\"relationName\":\"course_reviewsTocourses\"},{\"name\":\"course_videos\",\"kind\":\"object\",\"type\":\"course_videos\",\"relationName\":\"course_videosTocourses\"},{\"name\":\"enrollments\",\"kind\":\"object\",\"type\":\"enrollments\",\"relationName\":\"coursesToenrollments\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"payments\",\"relationName\":\"coursesTopayments\"}],\"dbName\":null},\"enrollments\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"course_id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"plan_id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"enrollment_status\"},{\"name\":\"started_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"courses\",\"kind\":\"object\",\"type\":\"courses\",\"relationName\":\"coursesToenrollments\"},{\"name\":\"course_plans\",\"kind\":\"object\",\"type\":\"course_plans\",\"relationName\":\"course_plansToenrollments\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"enrollmentsTousers\"}],\"dbName\":null},\"google_ads\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"placement\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ad_code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"mock_attempts\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"test_id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"answers\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"score\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"started_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"completed_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"mock_tests\",\"kind\":\"object\",\"type\":\"mock_tests\",\"relationName\":\"mock_attemptsTomock_tests\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"mock_attemptsTousers\"}],\"dbName\":null},\"mock_categories\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mock_series\",\"kind\":\"object\",\"type\":\"mock_series\",\"relationName\":\"mock_categoriesTomock_series\"}],\"dbName\":null},\"mock_questions\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"test_id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"question_text\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"question_type\",\"kind\":\"enum\",\"type\":\"question_type\"},{\"name\":\"options\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"correct_answer\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"marks\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"mock_tests\",\"kind\":\"object\",\"type\":\"mock_tests\",\"relationName\":\"mock_questionsTomock_tests\"}],\"dbName\":null},\"mock_series\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"category_id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"mock_categories\",\"kind\":\"object\",\"type\":\"mock_categories\",\"relationName\":\"mock_categoriesTomock_series\"},{\"name\":\"mock_tests\",\"kind\":\"object\",\"type\":\"mock_tests\",\"relationName\":\"mock_seriesTomock_tests\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"payments\",\"relationName\":\"mock_seriesTopayments\"}],\"dbName\":null},\"mock_tests\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"series_id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"duration_minutes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"total_marks\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"is_free\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"mock_attempts\",\"kind\":\"object\",\"type\":\"mock_attempts\",\"relationName\":\"mock_attemptsTomock_tests\"},{\"name\":\"mock_questions\",\"kind\":\"object\",\"type\":\"mock_questions\",\"relationName\":\"mock_questionsTomock_tests\"},{\"name\":\"mock_series\",\"kind\":\"object\",\"type\":\"mock_series\",\"relationName\":\"mock_seriesTomock_tests\"}],\"dbName\":null},\"payments\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"course_id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"payment_method\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"payment_status\"},{\"name\":\"transaction_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"mock_series_id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"courses\",\"kind\":\"object\",\"type\":\"courses\",\"relationName\":\"coursesTopayments\"},{\"name\":\"mock_series\",\"kind\":\"object\",\"type\":\"mock_series\",\"relationName\":\"mock_seriesTopayments\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"paymentsTousers\"}],\"dbName\":null},\"post_tags\":{\"fields\":[{\"name\":\"post_id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"tag_id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"posts\",\"kind\":\"object\",\"type\":\"posts\",\"relationName\":\"post_tagsToposts\"},{\"name\":\"tags\",\"kind\":\"object\",\"type\":\"tags\",\"relationName\":\"post_tagsTotags\"}],\"dbName\":null},\"post_templates\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"structure\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"posts\",\"kind\":\"object\",\"type\":\"posts\",\"relationName\":\"post_templatesToposts\"}],\"dbName\":null},\"posts\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"category_id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"external_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"thumbnail_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"published_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_by\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"template_id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"content_json\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"content_html\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"comments\",\"relationName\":\"commentsToposts\"},{\"name\":\"post_tags\",\"kind\":\"object\",\"type\":\"post_tags\",\"relationName\":\"post_tagsToposts\"},{\"name\":\"categories\",\"kind\":\"object\",\"type\":\"categories\",\"relationName\":\"categoriesToposts\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"postsTousers\"},{\"name\":\"post_templates\",\"kind\":\"object\",\"type\":\"post_templates\",\"relationName\":\"post_templatesToposts\"}],\"dbName\":null},\"study_materials\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"file_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"tags\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"post_tags\",\"kind\":\"object\",\"type\":\"post_tags\",\"relationName\":\"post_tagsTotags\"}],\"dbName\":null},\"users\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"full_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password_hash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"user_role\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"comments\",\"relationName\":\"commentsTousers\"},{\"name\":\"course_reviews\",\"kind\":\"object\",\"type\":\"course_reviews\",\"relationName\":\"course_reviewsTousers\"},{\"name\":\"enrollments\",\"kind\":\"object\",\"type\":\"enrollments\",\"relationName\":\"enrollmentsTousers\"},{\"name\":\"mock_attempts\",\"kind\":\"object\",\"type\":\"mock_attempts\",\"relationName\":\"mock_attemptsTousers\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"payments\",\"relationName\":\"paymentsTousers\"},{\"name\":\"posts\",\"kind\":\"object\",\"type\":\"posts\",\"relationName\":\"postsTousers\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

